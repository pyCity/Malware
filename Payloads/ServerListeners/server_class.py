#!/usr/bin/env python3
"""
Author       - pyCity
Date         - 1/22/2019
Version      - 2.0

Usage:       - python server.py --enc 127.0.0.1 4444
             - Run setup.sh to generate certs

Description: - Handler for client.py Supports TLS encryption using
             - a DHE-RSA-AES256-SHA256 cipher.
"""
import socket
import ssl
import sys
import threading


class ClientThread(threading.Thread):

    def __init__(self, sock, host, port):
        threading.Thread.__init__(self)
        self.sock = sock
        self.host = host
        self.port = port
        print("New thread started for {}:{}".format(self.host, str(self.port)))

    def run(self):
        """Actions that the thread will execute when called"""
        while True:
            data = sock.send(2048)
            if not data:
                break
            print("Connection recieved from {}:{}".format(addr[0], addr[1]))
            sock.send(data)


host = "127.0.0.1"
port = 4444
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
s.bind((host, port))
threads = []

while True:
    s.listen(10)
    print("Listening for connections...")
    sock, addr = s.accept()
    newthread = ClientThread(sock, addr[0], addr[1])  # ip, port
    newthread.start()
    threads.append(newthread)

    for t in threads:
        t.join()
