import zipfile  # Module used to open/unzip zipped files
import time     # Used for benchmarking

from threading import Thread


def extract_zip(filename, password):
    """Attempt to unlock a locked .zip file with the given password"""

    password_encoded = bytes(password.encode('utf-8'))  # Python 3 requires the password in bytes format
    with zipfile.ZipFile(filename) as zFile:  # Use with to avoid threads hanging trying to close the file
        try:
            zFile.setpassword(password_encoded)
            zFile.testzip()   # Try unlocking the zipfile, return True on success
            print("[+] Password Found: " + password + '\n')
        except:
            pass


def main():
    start = time.time()

    zip_file = "archive.zip"
    pass_file = open("fasttrack.txt")

    threads = []
    for line in pass_file.readlines():
        password = line.strip('\n')
        t = Thread(target=extract_zip, args=(zip_file, password))
        t.start()
        threads.append(t)

    for t in threads:
        t.join()

    end = time.time()
    total = end - start
    print("Total runtime: {} seconds".format(round(total, 5)))


if __name__ == '__main__':
    main()
